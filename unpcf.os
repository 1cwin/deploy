#Использовать logos
#Использовать gitsync

Перем Лог;
Перем Sync;
Перем ПутьИстории;
Перем КаталогИсходников;

Процедура Инициализация()
 
    Лог = Логирование.ПолучитьЛог("vega.save.cf");
    Лог.УстановитьУровень(УровниЛога.Отладка);
    
    ВыводПоУмолчанию = Новый ВыводЛогаВКонсоль();
    Лог.ДобавитьСпособВывода(ВыводПоУмолчанию);
	
	SystemInfo = new SystemInfo;
	Deploy_Server1C 		= SystemInfo.GetEnvironmentVariable("Deploy_Server1C");
	Deploy_SourceCatalog 	= SystemInfo.GetEnvironmentVariable("Deploy_SourceCatalog");
	Deploy_Catalog 			= SystemInfo.GetEnvironmentVariable("Deploy_Catalog");
	
	Лог.Отладка("Deploy_Server1C="+Deploy_Server1C);
	Лог.Отладка("Deploy_Catalog="+Deploy_Catalog);
	Лог.Отладка("Deploy_SourceCatalog="+Deploy_SourceCatalog);
	
	Если Deploy_Server1C = "" Тогда
		Лог.Ошибка("Сервер разработки не указан! заполните Deploy_Server1C");
		ЗавершитьРаботу(1);
	КонецЕсли;

	Если Deploy_Catalog = "" Тогда
		Лог.Ошибка("Каталог скриптов не указан! заполните Deploy_Catalog");
		ЗавершитьРаботу(1);
	КонецЕсли;

	Если Deploy_SourceCatalog = "" Тогда
		Лог.Ошибка("Каталог исходников не указан! заполните Deploy_SourceCatalog");
		ЗавершитьРаботу(1);
	КонецЕсли;

	ФайлМенеджерСинхронизации = Новый Файл(ОбъединитьПути(Deploy_Catalog, "МенеджерСинхронизации.os"));
	Если ФайлМенеджерСинхронизации.Существует() Тогда
		ПодключитьСценарий(ФайлМенеджерСинхронизации.ПолноеИмя, "ObjSync");
		Sync = Новый ObjSync();
	Иначе
		Лог.Ошибка("Не найден скрипт ""МенеджерСинхронизации.os"" ");
		ЗавершитьРаботу(1);
	КонецЕсли;

	ТекКаталог = ТекущийКаталог();
	Лог.Отладка("ТекКаталог="+ТекКаталог);

	РВ = Новый РегулярноеВыражение("\\");
	НачалоПоискаБазы = Ложь;
	ИмяБазы = "";
	МаркерНеобходимостиРазбораОбработок = "history";
	НеобходимостьРазбораОбработок = Ложь;

	ПутьИстории = "";
	
	Для Каждого Параметр Из РВ.Разделить(ТекКаталог) Цикл
		Если Параметр = Deploy_Server1C Тогда
			НачалоПоискаБазы = Истина;
		ИначеЕсли НачалоПоискаБазы = Истина Тогда
			ИмяБазы = Параметр;
			НачалоПоискаБазы = Ложь;
		КонецЕсли;
		
		Если НеобходимостьРазбораОбработок = Ложь Тогда
			ПутьИстории = ОбъединитьПути(ПутьИстории, Параметр + ?(ПутьИстории="", "\", ""));
		КонецЕсли;

		Если МаркерНеобходимостиРазбораОбработок = Параметр Тогда
			НеобходимостьРазбораОбработок = Истина;
		КонецЕсли;
		
		Лог.Отладка(Параметр);
	КонецЦикла;

	Если ИмяБазы = "" Тогда
		Лог.Ошибка("ИмяБазы не определено!");
		ЗавершитьРаботу(1);
	КонецЕсли;

	Если НеобходимостьРазбораОбработок = Ложь Тогда
		Лог.Ошибка("Не обнаружен каталог разбора обработок!");
		ЗавершитьРаботу(1);
	КонецЕсли;

	КаталогИсходников = ОбъединитьПути(Deploy_SourceCatalog, ИмяБазы, "CF");
	
	Лог.Отладка("ИмяБазы=" + ИмяБазы);  
	Лог.Отладка("КаталогИсходников=" + КаталогИсходников);  
	Лог.Отладка("ПутьИстории=" + ПутьИстории); 

	ПроверитьИСоздатьКаталог(КаталогИсходников);
	
	Если Sync.ПроверитьНаличиеРепозитарияГит(КаталогИсходников) = Ложь Тогда
		Sync.ИнициализироватьРепозитарий(КаталогИсходников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьИСоздатьКаталог(Знач Каталог)

	ФайлКаталога = Новый Файл(Каталог);
	Если ФайлКаталога.Существует() = Ложь Тогда
		СоздатьКаталог(Каталог);
	КонецЕсли; 	

КонецПроцедуры

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт
    Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);
КонецФункции

Процедура ОбработатьКаталог_CF()

	КаталогCF = ОбъединитьПути(ПутьИстории, "CF");
	
	// проверим наличие каталога "commited"
	ПроверитьИСоздатьКаталог(ОбъединитьПути(КаталогCF, "commited"));

	СписокФайлов = НайтиФайлы(КаталогCF, "*.cf", Ложь);
	Для Каждого Файл Из СписокФайлов Цикл

		Если Файл.ЭтоКаталог() Тогда
			Продолжить;
		КонецЕсли;

		ПолноеИмя = Файл.ПолноеИмя;
		Лог.Отладка(ПолноеИмя);
		
		Ошибка = Обработать_CF(Файл);
		Если Ошибка Тогда Прервать; КонецЕсли;
	
	КонецЦикла	
	
КонецПроцедуры

Функция Обработать_CF(Знач Файл)

	ПолноеИмя = Файл.ПолноеИмя;
	ДатаИзменения = Файл.GetModificationTime();
	
	Ошибка = Ложь;
	Попытка
		Sync.РазобратьФайлКонфигурации(ПолноеИмя, КаталогИсходников, РежимВыгрузкиФайлов.Авто);
		ВыполнитьКоммит(Файл.Имя, ДатаИзменения);
	Исключение
		Ошибка = Истина;
	КонецПопытки;
	
	Если Ошибка = Ложь Тогда
		Лог.Отладка("Обработан файл cf : " + ПолноеИмя);
		ПереместитьФайл(ПолноеИмя, ОбъединитьПути(ПутьИстории, "CF", "commited", Файл.Имя));
	КонецЕсли;
	
	Возврат Ошибка;

КонецФункции

Процедура ВыполнитьКоммит(Знач Коммент, Знач ДатаИзменения);
	
	Ошибка = Ложь;
	Попытка
		Sync.ВыполнитьКоммитГит(КаталогИсходников, Коммент,, ДатаИзменения);
	Исключение
		Ошибка = Истина;
	КонецПопытки;

КонецПроцедуры



Инициализация();
ОбработатьКаталог_CF();



